version: '3.9'

services:
  traefik:
    image: traefik:v3.0
    command:
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
      - '8080:8080' # Traefik dashboard
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  api-gateway:
    build: .
    command: pnpm start:dev api-gateway-svc
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`api.localhost`)'
      - 'traefik.http.services.api.loadbalancer.server.port=3000'
    depends_on:
      - auth-service
      - core-service

  auth-service:
    build: .
    command: pnpm start:dev auth-svc
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.auth.rule=Host(`auth.localhost`)'
      - 'traefik.http.services.auth.loadbalancer.server.port=3000'
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis

  core-service:
    build: .
    command: pnpm start:dev core-svc
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.core.rule=Host(`core.localhost`)'
      - 'traefik.http.services.core.loadbalancer.server.port=3000'
    environment:
      - NODE_ENV=development
    depends_on:
      - mongo
      - kafka

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'

  mongo:
    image: mongo:4.4
    ports:
      - '27017:27017'
    volumes:
      - mongodata:/data/db

  kafka:
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
    environment:
      KAFKA_ENABLE_KRAFT: 'no'
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181 # Using KAFKA_CFG_* instead of KAFKA_*
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes

volumes:
  pgdata:
  mongodata:
